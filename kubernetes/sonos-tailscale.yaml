apiVersion: v1
kind: Secret
metadata:
  name: tailscale-state-sonos
  namespace: sonos
stringData: {}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tailscale
  namespace: sonos
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  # Create can not be restricted to a resource name.
  verbs: ["create"]
- apiGroups: [""] # "" indicates the core API group
  resourceNames: ["tailscale-auth", "tailscale-state-sonos"]
  resources: ["secrets"]
  verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
  namespace: sonos
subjects:
- kind: ServiceAccount
  name: "tailscale"
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
  namespace: sonos
---
apiVersion: v1
kind: Pod
metadata:
  name: sonos-proxy
  namespace: sonos
spec:
  serviceAccountName: "tailscale"
  initContainers:
    # In order to run as a proxy we need to enable IP Forwarding inside
    # the container. The `net.ipv4.ip_forward` sysctl is not allowlisted
    # in Kubelet by default.
  - name: sysctler
    image: busybox
    securityContext:
      privileged: true
    command: ["/bin/sh"]
    args:
      - -c
      - sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
    resources:
      requests:
        cpu: 1m
        memory: 1Mi
  containers:
  - name: tailscale
    imagePullPolicy: Always
    image: "ghcr.io/tailscale/tailscale:latest"
    env:
    # Store the state in a k8s secret
    - name: TS_KUBE_SECRET
      value: "tailscale-state-sonos"
    - name: TS_USERSPACE
      value: "false"
    - name: TS_AUTH_KEY
      valueFrom:
        secretKeyRef:
          name: tailscale-auth
          key: TS_AUTH_KEY
          optional: true
    - name: TS_DEST_IP
      value: "10.152.183.204"
    - name: TS_AUTH_ONCE
      value: "true"
    securityContext:
      capabilities:
        add:
        - NET_ADMIN