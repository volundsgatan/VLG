apiVersion: v1
kind: Namespace
metadata:
  name: homebridge
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homebridge
  namespace: homebridge
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: homebridge
  namespace: homebridge
spec:
  serviceName: "homebridge"
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      app: homebridge
  template:
    metadata:
      labels:
        app: homebridge
    spec:
      serviceAccountName: homebridge
      hostNetwork: true
      initContainers:
      - name: "init-chown-data"
        image: debian:9
        imagePullPolicy: Always
        command: ["chown", "-R", "65534:65534", "/data"]
        volumeMounts:
        - name: homebridge-data
          mountPath: /data
          subPath: ""
      containers:
        - name: homebridge
          image: oznu/homebridge:2023-01-08
          imagePullPolicy: "IfNotPresent"
          #args:
          #  - --config.file=/etc/config/prometheus.yaml
          #  - --storage.tsdb.path=/data
          #  - --web.console.libraries=/etc/prometheus/console_libraries
          #  - --web.console.templates=/etc/prometheus/consoles
          #  - --web.enable-lifecycle
          #  - --storage.tsdb.retention.time=3000d
          ports:
            - containerPort: 8581
          #readinessProbe:
          #  httpGet:
          #    path: /-/ready
          #    port: 9090
          #  initialDelaySeconds: 30
          #  timeoutSeconds: 30
          #livenessProbe:
          #  httpGet:
          #    path: /-/healthy
          #    port: 9090
          #  initialDelaySeconds: 30
          #  timeoutSeconds: 30
          resources:
            requests:
              cpu: 2000m
              memory: 2000Mi
          volumeMounts:
            # - name: config-volume
            #   mountPath: /etc/config
            - name: homebridge-data
              mountPath: /homebridge
              subPath: ""

        - name: ts-sidecar
          imagePullPolicy: Always
          image: "ghcr.io/tailscale/tailscale:latest"
          env:
          - name: TS_KUBE_SECRET
            value: "tailscale-state-homebridge"
          - name: TS_USERSPACE
            value: "false"
          - name: TS_AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: tailscale-auth
                key: TS_AUTH_KEY
                optional: true
          securityContext:
            capabilities:
              add:
              - NET_ADMIN

      terminationGracePeriodSeconds: 300
      # volumes:
      #   - name: config-volume
      #     configMap:
      #       name: prometheus-config
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: k8s-app
      #           operator: In
      #           values:
      #           - homebridge
      #       topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
  - metadata:
      name: homebridge-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "5Gi"